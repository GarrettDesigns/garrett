/*====================================================================
=            Utility file containing functions and mixins            =
====================================================================*/

///////////////////////////////////////////////////////

// This file contains functions and mixins to generate
// dynamic styles and elements

///////////////////////////////////////////////////////


// Functions

@function palette($palette, $color) {
  @return map-get(map-get($palettes, $palette), $color);
}

// Mixins

@mixin clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin button-base($radius: 10px, $padding: 10px, $color: $white, $bg: null, $border: none) {
  border-radius: $radius;
  padding: $padding;
  color: $color;
  background: $bg;
  border: $border;
  outline: none;
  cursor: pointer;
  transition: all .5s;
  &:hover {
    // background: darken($bg, 10%);
  }
}

@mixin custom-buttons($map) {
  @each $button, $button-color in $map {
    .#{$button}-button {
      @if $button == primary {
        @include button-base($color: pallete(buttons, primary));
      }
      @if $button == secondary {
        @include button-base($bg: $white);
      }
      @if $button == cancel {
        @include button-base($bg: $white);
      }
      @if $button == info {
        @include button-base($bg: $white);
      }
    }
  }
}

//builds ui component box containers for content

@mixin shadow-box($width: null, $color: null, $padding: 20px, $background-color: $white, $shadow-color: transparentize(palette(grayscale, x-dark), 0.5)) {
  width: $width;
  color: $color;
  padding: $padding;
  background: $background-color;
  box-shadow: 0px 1px 1px 0px $shadow-color;
}

@mixin link-defaults($color: null, $font-weight: null, $padding: null, $display: inline-block, $font-family: $primary-font-family) {
  color: $color;
  font-weight: $font-weight;
  padding: $padding;
  display: $display;
  text-decoration: none;
  font-family: $font-family;
}

